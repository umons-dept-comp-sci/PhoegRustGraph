initSidebarItems({"mod":[["algorithm",""],["errors","Module containing the different specific errors returned by the algorithms."],["format","Module containing functions to handle different graph formats such as graph6"],["invariants","Module containing implementations of different graph invariants"],["nauty","Module containg methods to call the nauty library in order to compute the canonical form or the orbits of the vertices of a graph."],["subgraphs","Module containing algorithms to compute the occurences of an induced subgraph in a bigger graph."],["transfo_result",""],["transfos","Module containing graph transformations. Each transformation uses the orbits of the homomorphism group to filter out symmetries."]],"struct":[["EdgeIterator",""],["GraphNauty","Structure representing a undirected simple graph."],["Set","Structure to store a set of integers using binary words. This structure can store all integers from 0 to a maximum value given in parameters to the constructors. For example, a maximum value of 16 allows storing all integers from 0 to 15. Since it uses 64 bits binary words, a maximum size of 64 allows using only one word and is thus faster."],["SetIter",""]],"trait":[["Graph",""],["GraphFormat",""],["GraphIso",""],["GraphIter",""]]});