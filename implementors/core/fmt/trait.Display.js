(function() {var implementors = {};
implementors["base64"] = [{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"base64/display/struct.Base64Display.html\" title=\"struct base64::display::Base64Display\">Base64Display</a>&lt;'a&gt;","synthetic":false,"types":["base64::display::Base64Display"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"enum\" href=\"base64/enum.DecodeError.html\" title=\"enum base64::DecodeError\">DecodeError</a>","synthetic":false,"types":["base64::decode::DecodeError"]}];
implementors["graph"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"graph/errors/struct.InvalidGraph6.html\" title=\"struct graph::errors::InvalidGraph6\">InvalidGraph6</a>","synthetic":false,"types":["graph::errors::InvalidGraph6"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"graph/errors/struct.InvalidBinary.html\" title=\"struct graph::errors::InvalidBinary\">InvalidBinary</a>","synthetic":false,"types":["graph::errors::InvalidBinary"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"graph/errors/struct.DisconnectedGraph.html\" title=\"struct graph::errors::DisconnectedGraph\">DisconnectedGraph</a>","synthetic":false,"types":["graph::errors::DisconnectedGraph"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"enum\" href=\"graph/invariants/enum.Distance.html\" title=\"enum graph::invariants::Distance\">Distance</a>","synthetic":false,"types":["graph::invariants::Distance"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"graph/transfo_result/struct.GraphTransformation.html\" title=\"struct graph::transfo_result::GraphTransformation\">GraphTransformation</a>","synthetic":false,"types":["graph::transfo_result::GraphTransformation"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"graph/struct.Set.html\" title=\"struct graph::Set\">Set</a>","synthetic":false,"types":["graph::Set"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"graph/struct.GraphNauty.html\" title=\"struct graph::GraphNauty\">GraphNauty</a>","synthetic":false,"types":["graph::GraphNauty"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()